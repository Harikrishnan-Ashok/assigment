import React, { useState, useEffect } from 'react';
import { Chart } from 'react-google-charts';
import { parseJSON, format } from 'date-fns';
import timelineData from '../data/data.json';
import usersData from '../data/users.json';

const TimelineChart = () => {
  const [data, setData] = useState([]);
  
  useEffect(() => {
    // Process the data for Google Charts Timeline
    const processData = () => {
      // First row is the header
      const chartData = [
        [{ type: 'string', id: 'User' }, 
         { type: 'string', id: 'Task' }, 
         { type: 'date', id: 'Start' }, 
         { type: 'date', id: 'End' }]
      ];

      // Map user IDs to names
      const userMap = usersData.users.reduce((acc, user) => {
        acc[user.id] = user.name;
        return acc;
      }, {});

      // Use finalSchedule from the data
      timelineData.finalSchedule.forEach((item) => {
        chartData.push([
          userMap[item.userId] || `User ${item.userId}`,
          `Shift`,
          parseJSON(item.startDate),
          parseJSON(item.endDate)
        ]);
      });

      return chartData;
    };

    setData(processData());
  }, []);

  const options = {
    timeline: {
      showRowLabels: true,
      showBarLabels: false
    },
    avoidOverlappingGridLines: false,
    height: 400
  };

  return (
    <div className="p-4">
      <div className="mb-4 flex justify-between items-center">
        <div>
          <button className="px-4 py-2 bg-blue-500 text-white rounded mr-2">Today</button>
          <button className="px-4 py-2 border rounded mr-2">Prev</button>
          <button className="px-4 py-2 border rounded">Next</button>
        </div>
        <div>
          <button className="px-4 py-2 border rounded mr-2">Month</button>
          <button className="px-4 py-2 border rounded mr-2">2 Weeks</button>
          <button className="px-4 py-2 border rounded mr-2">Week</button>
          <button className="px-4 py-2 border rounded mr-2">2 Days</button>
          <button className="px-4 py-2 border rounded">Day</button>
        </div>
      </div>

      {data.length > 0 ? (
        <Chart
          chartType="Timeline"
          data={data}
          options={options}
          width="100%"
          height="400px"
        />
      ) : (
        <div className="flex justify-center items-center h-[400px]">
          Loading...
        </div>
      )}
    </div>
  );
};

export default TimelineChart;
